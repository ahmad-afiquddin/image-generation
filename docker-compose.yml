services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
        - PORT=3000
        - REDIS_HOST=redis
        - REDIS_PORT=6379
        - MINIO_ENDPOINT=minio
        - MINIO_PORT=9000
        - MINIO_USE_SSL=false
        - MINIO_ACCESS_KEY=minioadmin
        - MINIO_SECRET_KEY=minioadmin
        - MINIO_BUCKET_NAME=thumbnails
        - MINIO_PUBLIC_URL=http://localhost:9000
    container_name: cogent-assignment
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - ./public:/app/public
    environment:
      - NODE_ENV=production
    depends_on:
      redis:
        condition: service_started
      minio:
        condition: service_healthy

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data

  minio:
    image: minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    command: server --console-address ":9001" /data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 10s
      timeout: 50s
      retries: 5
      start_period: 30s

  minio-init:
    image: minio/mc
    container_name: minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb --ignore-existing myminio/thumbnails;
      /usr/bin/mc anonymous set public myminio/thumbnails;
      echo 'MinIO initialized successfully';
      exit 0;
      "

volumes:
  redis-data:
  minio-data:
